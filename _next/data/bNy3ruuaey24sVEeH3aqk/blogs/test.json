{"pageProps":{"slug":"test","readingTime":"1 min read","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Next.js has two forms of pre-rendering: \", _jsx(_components.strong, {\n        children: \"Static Generation\"\n      }), \" and \", _jsx(_components.strong, {\n        children: \"Server-side Rendering\"\n      }), \". The difference is in \", _jsx(_components.strong, {\n        children: \"when\"\n      }), \" it generates the HTML for a page.\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Static Generation\"\n        }), \" is the pre-rendering method that generates the HTML at \", _jsx(_components.strong, {\n          children: \"build time\"\n        }), \". The pre-rendered HTML is then \", _jsx(_components.em, {\n          children: \"reused\"\n        }), \" on each request.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Server-side Rendering\"\n        }), \" is the pre-rendering method that generates the HTML on \", _jsx(_components.strong, {\n          children: \"each request\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Importantly, Next.js lets you \", _jsx(_components.strong, {\n        children: \"choose\"\n      }), \" which pre-rendering form to use for each page. You can create a \\\"hybrid\\\" Next.js app by using Static Generation for most pages and using Server-side Rendering for others.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"frontMatter":{"title":"A test blog","description":"some description","date":"2020-01-01","slug":"test","ogImage":{"url":"https://images.unsplash.com/photo-1575936123452-b67c3203c357?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80"}},"tags":[]},"__N_SSG":true}